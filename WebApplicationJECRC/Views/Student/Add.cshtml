@model WebApplicationJECRC.Models.Student

<style>

    body {
        background-color: black;
    }

    * {
        box-sizing: border-box;
    }

    /* Add padding to containers */
    .container {
        padding: 16px;
        background-color: white;
    }

    /* Full-width input fields */
    input[type=text], input[type=password] {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }

        input[type=text]:focus, input[type=password]:focus {
            background-color: #ddd;
            outline: none;
        }

    /* Overwrite default styles of hr */
    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
    }

    /* Set a style for the submit button */
    .registerbtn {
        color: white;
        padding: 16px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
        opacity: 0.9;
    }

        .registerbtn:hover {
            opacity: 1;
        }



    /* Set a grey background color and center the text of the "sign in" section */
    .signin {
        background-color: #f1f1f1;
        text-align: center;
    }
</style>

<! DOCTYPE html>
<html>
<body>
    <div class="container">
        <h1>Register </h1>
        <p>Please fill out this form with your personal information .</p>


        @using (Html.BeginForm("Add", "Student", FormMethod.Post))
        {<hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RegNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RegNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RegNumber, "", new { @class = "text-danger" })
                </div>

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParentMobilenNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ParentMobilenNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentMobilenNumber, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @if (ViewBag.BranchList != null)
                {@Html.LabelFor(model => model.BranchID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Name", ViewBag.BranchList as SelectList, "--Select your Branch--", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                </div>
            }
                @Html.DropDownListFor(model => model.FigID, new SelectList(""), "--Select your FIG--", new { @class = "form-control" })
            </div>

            //<div class="form-group">
              
              //  @Html.LabelFor(model => model.FigID, htmlAttributes: new { @class = "control-label col-md-2" })
                //<div class="col-md-10">
                  //  @Html.DropDownList("Name", new SelectList(""), "--Select your FIG--", new { @class = "form-control" })
                    //@Html.ValidationMessageFor(model => model.FigID, "", new { @class = "text-danger" })
                //</div>
            
            //</div>

            <script>

                $(document).ready(function () {

                    $("#BranchID").change(function () {

                        var branchId = $(this).val();
                        debugger
                        $.ajax({

                            type: "Post",
                            url: "/Add/GetFIGs?branchId=" + branchId,
                            contentType: "html",
                            success: function (response) {
                                debugger
                                $("#FigID").empty();
                                $("#FigID").append(response);

                            }

                        })

                    })

                })

            </script>




            <div class="form-group">
                @Html.LabelFor(model => model.LetterAlloted, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LetterAlloted, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LetterAlloted, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HasApplied, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.HasApplied, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.HasApplied, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsPaid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IsPaid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsPaid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Second Step" class="btn btn-default" />
                </div>
            </div>


        }
    </div>
</body>
</html>