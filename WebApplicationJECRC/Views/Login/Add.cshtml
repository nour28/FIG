@model WebApplicationJECRC.Models.Login
<style>
  
    body {
        background-color: black;
    }

    * {
        box-sizing: border-box;
    }

    /* Add padding to containers */
    .container {
        padding: 16px;
        background-color: white;
    }

    /* Full-width input fields */
    input[type=text], input[type=password] {
        width: 100%;
        padding: 15px;
        margin: 5px 0 22px 0;
        display: inline-block;
        border: none;
        background: #f1f1f1;
    }

        input[type=text]:focus, input[type=password]:focus {
            background-color: #ddd;
            outline: none;
        }

    /* Overwrite default styles of hr */
    hr {
        border: 1px solid #f1f1f1;
        margin-bottom: 25px;
    }

    /* Set a style for the submit button */
    .registerbtn {
        color: white;
        padding: 16px 20px;
        margin: 8px 0;
        border: none;
        cursor: pointer;
        width: 100%;
        opacity: 0.9;
    }

        .registerbtn:hover {
            opacity: 1;
        }



    /* Set a grey background color and center the text of the "sign in" section */
    .signin {
        background-color: #f1f1f1;
        text-align: center;
    }
</style>
@using (Html.BeginForm("Add","Login",FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="container">
    <h1>Register</h1>
    <p>Please fill in this form to start create an account.</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter UserName" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Psw, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Psw, new { htmlAttributes = new { @class = "form-control", placeholder = "Confirm Password" } })
            @Html.ValidationMessageFor(model => model.Psw, "", new { @class = "text-danger" })
        </div>
    </div>


    <p>By creating an account you agree to our <a href="#">Terms & Privacy</a>.</p>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="First Step" class="registerbtn btn-success" />
           
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-warning">@ViewBag.DuplicateMessage</label>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-2">
            <label class="label-success">@ViewBag.SuccessMessage</label>
        </div>
    </div>
</div>

    <div class="container signin">
        <p>Already have an account? <a href="@Url.Action("LoginForm","Login")">Sign in</a>.</p>
    </div>
}


@section scripts {
     @Scripts.Render("~/bundles/jqueryval")}
